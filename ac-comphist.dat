((("line" .
   [2 0 0 0])
  ("bills" .
   [2 0 0 0 0])
  ("0:40" .
   [1 0 0 0])
  ("ratio" .
   [5 0 0 0 0])
  ("testSet" .
   [1 0 0 0 0 0 0])
  ("actuals" .
   [1 0 0 0 0 0 0])
  ("testSet$pop" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("predictions" .
   [3 0 0 0 0 0 0 0 0 0 0])
  ("model" .
   [1 0 0 0 0])
  ("fol" .
   [1 0 0])
  ("sum" .
   [4 0 0])
  ("predictTrain" .
   [0 0 0 0 0 0 0 0 0 0 1 0])
  ("predictTest" .
   [1 0 0 0 0 0 0 0 0 0 1])
  ("predict" .
   [1 0 0 0 0 0 0])
  ("trainSet" .
   [1 0 0 0 0 0 0 0])
  ("geom_point" .
   [1 0 0 0 0 0 0 0 0 0])
  ("trainSet$pop" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("trainSet$pe" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("trainSet$chl_small" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("ggplot" .
   [1 0 0 0 0 0])
  ("qplot" .
   [1 0 0 0 0])
  ("typeof" .
   [6 0 0 0 0 0])
  ("ncol" .
   [5 0 0 0])
  ("nrow" .
   [11 0 0 0])
  ("flow" .
   [4 0 0 0])
  ("head" .
   [16 0 0 0])
  ("help" .
   [4 0 0 0])
  ("summary" .
   [7 0 0 0 0 0 0])
  ("kbd" .
   [1 0 0])
  ("latex-mode" .
   [1 0 0 0 0 0 0 0 0 0])
  ("lambda" .
   [1 0 0 0 0 0])
  ("mode" .
   [1 0 0 0])
  ("with" .
   [3 0 0 0])
  ("$rbx" .
   [1 0 0 0])
  ("Add" .
   [1 0 0])
  ("rbp" .
   [2 0 0])
  ("r13:" .
   [1 0 0 0])
  ("rbp:" .
   [1 0 0 0])
  ("rbx:" .
   [1 0 0 0])
  ("rsi:" .
   [1 0 0 0])
  ("r10:" .
   [3 0 0 0])
  ("rax:" .
   [3 0 0 0])
  ("eax:" .
   [2 0 0 0])
  ("frac{1}{8}" .
   [1 0 0 0 0 0 0 0 0 0])
  ("term" .
   [4 0 0 0])
  ("tweet" .
   [1 0 0 0 0])
  ("str" .
   [5 0 0])
  ("^{n+1}3x^{3n" .
   [0 0 0 0 0 0 1 0 0 0 0 0])
  ("-1" .
   [1 0])
  ("int" .
   [11 0 0])
  ("get" .
   [1 0 0])
  ("to" .
   [7 0])
  ("of" .
   [1 0])
  ("when" .
   [2 0 0 0])
  ("series" .
   [1 0 0 0 0 0])
  ("/$$" .
   [8 0 0])
  ("new_bars" .
   [0 0 0 0 1 0 0 0])
  ("leftover_wrappers" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("import" .
   [1 0 1 0 0 0])
  ("numpy" .
   [0 0 0 0 1])
  ("val" .
   [1 0 0])
  ("data" .
   [4 0 0 0])
  ("index" .
   [4 0 0 0 0])
  ("if" .
   [14 0])
  ("else" .
   [3 0 0 0])
  ("log" .
   [1 0 0])
  ("Index" .
   [1 0 0 0 0])
  ("callOnAll" .
   [1 0 0 0 0 0 0 0 0])
  ("compare" .
   [2 0 0 0 0 0 0])
  ("mydata" .
   [1 0 0 0 0 0])
  ("void" .
   [1 0 0 0])
  ("return" .
   [4 0 0 0 0 0])
  ("isLogged" .
   [1 0 0 0 0 0 0 0])
  ("text" .
   [1 0 0 0])
  ("latex" .
   [1 0 0 0 0])
  ("st" .
   [1 0])
  ("state_dict" .
   [5 0 0 0 0 1 0 0 2 1])
  ("state_happines" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 5])
  ("def" .
   [2 0 0])
  ("convertToHappinessDict" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("scores" .
   [1 0 0 0 0 0])
  ("for" .
   [11 0 0])
  ("state_happiness" .
   [5 0 0 0 0 0 0 0 0 0 0 0 0 0 2])
  ("print" .
   [7 0 0 0 0])
  ("printHappinessValues" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("in" .
   [10 0])
  ("state" .
   [7 0 0 0 0])
  ("total" .
   [2 0 0 0 0])
  ("float" .
   [1 0 0 0 0])
  ("average_happiness" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 2])
  ("total_happiness" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("generateHappinessDict" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("full_state_name" .
   [1 0 0 0 1 0 0 0 0 1 0 0 0 0 1])
  ("None" .
   [3 0 0 0])
  ("full_name" .
   [2 0 0 0 0 0 0 0 1])
  ("state_name" .
   [1 0 0 0 0 0 0 0 0 0])
  ("state_abbr" .
   [3 0 0 0 0 0 0 0 0 3])
  ("stateFound" .
   [0 0 0 0 0 0 0 0 0 2])
  ("True" .
   [1 0 0 0])
  ("id" .
   [1 0])
  ("not" .
   [1 0 0])
  ("encode" .
   [4 0 0 0 0 0])
  ("max_average_happiness" .
   [0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("max_average_happiness_stta" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("max_average_happiness_state" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1])
  ("abbreviat" .
   [0 0 0 1 0 0 0 0 0])
  ("states_dict" .
   [0 0 0 0 0 0 0 0 0 0 1])
  ("copy-line" .
   [1 0 0 0 0 0 0 0 0])
  ("replace" .
   [2 0 0 0 0 0 0])
  ("from" .
   [1 0 0 0])
  ("exit" .
   [2 0 0 0])
  ("count" .
   [3 0 0 0 0])
  ("upper_limit" .
   [0 0 0 0 0 0 1 0 0 0 0])
  ("disdlibrary" .
   [0 0 0 0 1 0 0 0 0 0 0])
  ("block_size" .
   [6 0 0 1 2 3 0 2 4 4])
  ("access" .
   [2 0 0 0 0 0])
  ("start_count" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("char" .
   [1 0 0 0])
  ("bool_t" .
   [2 0 0 0 1 0])
  ("printf" .
   [6 0 0 0 0 0])
  ("flush_cache" .
   [0 0 0 0 0 1 0 0 0 0 0])
  ("get_block_size" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("access0" .
   [4 0 0 0 0 0 0])
  ("while" .
   [3 0 0 0 0])
  ("break" .
   [2 0 0 0 0])
  ("a" .
   [3])
  ("block" .
   [2 0 0 0 0])
  ("limit" .
   [9 0 0 0 1])
  ("upperBound" .
   [1 0 0 1 0 1 0 0 0 0])
  ("access_cache" .
   [2 0 0 0 0 0 0 0 0 0 0 2])
  ("size" .
   [10 0 0 0])
  ("get_cache_size" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("currentSize" .
   [1 0 0 1 0 0 0 0 1 1 2])
  ("sizesAdded" .
   [10 0 0 0 0 0 0 0 0 0])
  ("cache_size" .
   [1 0 0 0 0 0 0 0 0 0])
  ("global-visual-line-mode" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("environmental" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("on" .
   [1 0])
  ("t" .
   [1])
  ("have" .
   [2 0 0 0])
  ("technical" .
   [1 0 0 0 0 0 0 0 0])
  ("expertise" .
   [1 0 0 0 0 0 0 0 0])
  ("solving" .
   [0 0 0 0 1 0 0])
  ("meaningful" .
   [1 0 0 0 0 0 0 0 0 0])
  ("and" .
   [3 0 0])
  ("skills" .
   [1 0 0 0 0 0])
  ("toward" .
   [2 0 0 0 0 0])
  ("problems" .
   [1 0 0 0 0 0 0 0])
  ("that" .
   [1 0 0 0])
  ("Bellevue" .
   [2 0 0 0 0 0 0 0])
  ("Tech" .
   [2 0 0 0])
  ("Hive" .
   [2 0 0 0])
  ("like-minded" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("peers" .
   [1 0 0 0 0])
  ("like" .
   [1 0 0 0])
  ("all" .
   [1 0 0])
  ("will" .
   [1 0 0 0])
  ("be" .
   [1 0])
  ("life." .
   [1 0 0 0 0])
  ("experience" .
   [1 0 0 0 0 0 0 0 0 0])
  ("is" .
   [2 0])
  ("collaborating" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("great" .
   [1 0 0 0 0])
  ("way" .
   [1 0 0])
  ("next" .
   [1 0 0 0])
  ("world" .
   [1 0 0 0 0])
  ("createDataPartition" .
   [0 0 0 0 0 0 0 0 1 0 1 3 0 0 0 0 0 0 0])
  ("library" .
   [2 0 0 0 0 0 0])
  ("install.packages" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("evalCpp" .
   [1 0 0 0 0 0 0])
  ("require" .
   [3 0 0 0 0 0 0])
  ("testMonth" .
   [0 0 0 0 0 0 0 1 0])))
